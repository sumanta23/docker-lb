package org.sumanta.jbosscc.cluster.client;

import java.io.IOException;
import java.util.Hashtable;
import java.util.Properties;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NameClassPair;
import javax.naming.NamingEnumeration;
import javax.naming.NamingException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.jboss.ejb.client.EJBClientConfiguration;
import org.jboss.ejb.client.PropertiesBasedEJBClientConfiguration;
import org.jboss.ejb.client.StatelessEJBLocator;
import org.jboss.ejb.client.remoting.ConfigBasedEJBClientContextSelector;
import org.sumanta.jbosscc.api.RemoteStateless;

@WebServlet(value = "/Calc", name = "Calc")
public class Calc extends HttpServlet {
    private static final long serialVersionUID = 1L;

    /**
     * @see HttpServlet#HttpServlet()
     */
    public Calc() {
        super();
        // TODO Auto-generated constructor stub
    }

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // TODO Auto-generated method stub
    }

    /**
     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {

            RemoteStateless statelessProxy;

            final Properties ejbProperties = new Properties();
            ejbProperties.put("remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED", "false");
            ejbProperties.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming");
            ejbProperties.put("remote.connections", "default");
            ejbProperties.put("remote.connection.default.host", "172.17.0.6");
            ejbProperties.put("remote.connection.default.port", 4447);
            ejbProperties.put("remote.connection.1.connect.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS", "JBOSS-LOCAL-USER"); // needed for forcing authentication over remoting (i.e. ifyou have a custom login module) //
            ejbProperties.put("remote.connection.default.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT", "false"); // needed for a login module that requires the password in plaintext 
            ejbProperties.put("remote.connection.default.username", "app");
            ejbProperties.put("remote.connection.default.password", "Pass@1234!");
            ejbProperties.put("org.jboss.ejb.client.scoped.context", "true"); // Not needed when EJBClientContext.setSelector is called programatically. ATTENTION: Client-Interceptor registration below does not work with this property! BUG?

            final EJBClientConfiguration ejbClientConfiguration = new PropertiesBasedEJBClientConfiguration(ejbProperties);
            final ConfigBasedEJBClientContextSelector selector = new ConfigBasedEJBClientContextSelector(ejbClientConfiguration); //EJBClientContext.setSelector(selector); EJBClientContext.getCurrent().registerInterceptor(0, new ClientInterceptor());

            /*final Context ejbContext = new InitialContext(ejbProperties);

            final String appName = "cluster-ear";
            final String moduleName = "cluster"; // module-name in ejb-jar.xml
            final String distinctName = ""; // jboss:distinct-name in jboss-ejb3.xml
            final String beanName = "ClusteredStatelessBean";

            final String jndiName = "ejb:" + appName + '/' + moduleName + '/' + distinctName + "/" + beanName + '!' + RemoteStateless.class.getName();
            System.out.println(jndiName);

            statelessProxy = (RemoteStateless) ejbContext.lookup(jndiName);

            System.out.println(statelessProxy);

            String nodeName = statelessProxy.getNodeName();
            System.out.println(nodeName);

            ejbContext.close();*/
            
            
            StatelessEJBLocator<RemoteStateless> locator = new StatelessEJBLocator(RemoteStateless.class, "cluster-ear", "cluster", "CalculatorRemoteBean", "");               
            
            RemoteStateless ejb =  org.jboss.ejb.client.EJBClient.createProxy(locator);

            response.getWriter().append("nodenamd:" + ejb.getNodeName());
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

}
